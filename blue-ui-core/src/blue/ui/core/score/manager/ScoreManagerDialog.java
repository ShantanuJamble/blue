/*
 * blue - object composition environment for csound
 * Copyright (C) 2012
 * Steven Yi <stevenyi@gmail.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package blue.ui.core.score.manager;

import blue.score.Score;
import blue.score.layers.LayerGroup;
import blue.score.layers.LayerGroupProvider;
import blue.score.layers.LayerGroupProviderManager;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;

/**
 *
 * @author stevenyi
 */
public class ScoreManagerDialog extends javax.swing.JDialog {
    private final DefaultListModel emptyList = new DefaultListModel();

    private Score score;
    
    private JPopupMenu addLayerGroupMenu = null;

    /**
     * Creates new form ScoreManagerDialog
     */
    public ScoreManagerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public void setScore(Score score) {
        this.score = score;
        layerGroupsList.setModel(new LayerGroupListModel(score));
        layersList.setModel(emptyList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        layerGroupsList = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        layersList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lGroupPushUpButton = new javax.swing.JButton();
        lGroupPushDownButton = new javax.swing.JButton();
        lGroupAddButton = new javax.swing.JButton();
        lGroupMinusButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        layersPushUpButton = new javax.swing.JButton();
        layersPushDownButton = new javax.swing.JButton();
        layersAddButton = new javax.swing.JButton();
        layersMinusButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.title")); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        layerGroupsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        layerGroupsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                layerGroupsListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(layerGroupsList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        layersList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(layersList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        getContentPane().add(jLabel2, gridBagConstraints);

        jPanel1.setMinimumSize(new java.awt.Dimension(30, 20));
        jPanel1.setPreferredSize(new java.awt.Dimension(160, 20));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        lGroupPushUpButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.lGroupPushUpButton.text")); // NOI18N
        jPanel1.add(lGroupPushUpButton);

        lGroupPushDownButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.lGroupPushDownButton.text")); // NOI18N
        jPanel1.add(lGroupPushDownButton);

        lGroupAddButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.lGroupAddButton.text")); // NOI18N
        lGroupAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lGroupAddButtonActionPerformed(evt);
            }
        });
        jPanel1.add(lGroupAddButton);

        lGroupMinusButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.lGroupMinusButton.text")); // NOI18N
        lGroupMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lGroupMinusButtonActionPerformed(evt);
            }
        });
        jPanel1.add(lGroupMinusButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setMinimumSize(new java.awt.Dimension(30, 20));
        jPanel2.setPreferredSize(new java.awt.Dimension(160, 20));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        layersPushUpButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.layersPushUpButton.text")); // NOI18N
        jPanel2.add(layersPushUpButton);

        layersPushDownButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.layersPushDownButton.text")); // NOI18N
        jPanel2.add(layersPushDownButton);

        layersAddButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.layersAddButton.text")); // NOI18N
        jPanel2.add(layersAddButton);

        layersMinusButton.setText(org.openide.util.NbBundle.getMessage(ScoreManagerDialog.class, "ScoreManagerDialog.layersMinusButton.text")); // NOI18N
        jPanel2.add(layersMinusButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = -5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void layerGroupsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_layerGroupsListValueChanged
        if(!evt.getValueIsAdjusting()) {
            if(evt.getFirstIndex() == evt.getLastIndex()) {
                layersList.setModel(new LayersListModel(score.getLayerGroup(
                        evt.getFirstIndex())));
            } else {
                layersList.setModel(emptyList);
            }
        }
    }//GEN-LAST:event_layerGroupsListValueChanged

    private void lGroupMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lGroupMinusButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lGroupMinusButtonActionPerformed

    private void lGroupAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lGroupAddButtonActionPerformed
        JPopupMenu menu = getAddLayerGroupMenu();
        Point p = SwingUtilities.convertPoint(lGroupAddButton, 0, 0, this);
        menu.show(this, p.x, p.y - menu.getHeight());
    }//GEN-LAST:event_lGroupAddButtonActionPerformed

    private LayerGroupListModel getLayerGroupListModel() {
        return (LayerGroupListModel)layerGroupsList.getModel();
    }
    
    private JPopupMenu getAddLayerGroupMenu() {
        if(addLayerGroupMenu == null) {
            addLayerGroupMenu = new JPopupMenu();
            
            ActionListener listener = new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    JMenuItem menuItem = (JMenuItem)e.getSource();
                    LayerGroupProvider provider = (LayerGroupProvider) 
                            menuItem.getClientProperty("provider");
                    LayerGroup layerGroup = provider.createLayerGroup();
                    LayerGroupListModel model = getLayerGroupListModel();
        
                    int index = (layerGroupsList.getSelectionModel().getMaxSelectionIndex());

                    if(index < 0 || index > model.getSize()) {
                        model.addLayerGroup(model.getSize(), layerGroup);
                    } else {
                        model.addLayerGroup(index, layerGroup);
                    }
                }
            };
            
            LayerGroupProviderManager manager = LayerGroupProviderManager.getInstance();
            for(LayerGroupProvider provider : manager) {
                JMenuItem item = new JMenuItem("Add " + provider.getLayerGroupName() + " Layer Group");
                item.putClientProperty("provider", provider);
                item.addActionListener(listener);
                addLayerGroupMenu.add(item);
            }
        }
        
        return addLayerGroupMenu;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(
                    ScoreManagerDialog.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(
                    ScoreManagerDialog.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(
                    ScoreManagerDialog.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(
                    ScoreManagerDialog.class.getName()).log(
                    java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                ScoreManagerDialog dialog = new ScoreManagerDialog(
                        new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lGroupAddButton;
    private javax.swing.JButton lGroupMinusButton;
    private javax.swing.JButton lGroupPushDownButton;
    private javax.swing.JButton lGroupPushUpButton;
    private javax.swing.JList layerGroupsList;
    private javax.swing.JButton layersAddButton;
    private javax.swing.JList layersList;
    private javax.swing.JButton layersMinusButton;
    private javax.swing.JButton layersPushDownButton;
    private javax.swing.JButton layersPushUpButton;
    // End of variables declaration//GEN-END:variables
}
